// var a = [...Array(6)].map(e => [...Array(6)].map(e => ({v:0, c:false})));
// a[0][0].v = 14.7
// a[0][0].c = true
// a[3][4].v = 11.5
// a[3][4].c = true
// a[5][2].v = 12.5
// a[5][2].c = true

let t = `14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	14.7	14.7	12.29803922	12.21818182	12.21818182	12.13935484	12.06153846	11.98471338	11.98471338	11.90886076	11.83396226	11.83396226	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	14.7	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.76	11.76	11.68695652	11.68695652	11.68695652
14.7	14.7	14.7	14.7	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.76	11.68695652	11.61481481	11.61481481	11.61481481
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.68695652	11.68695652	11.61481481	11.61481481	11.61481481
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.68695652	11.68695652	11.61481481	11.61481481	11.61481481
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.61481481	11.61481481	11.54355828	11.54355828	11.54355828
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.54355828	11.54355828	11.54355828	11.54355828	11.54355828
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.54355828	11.54355828	11.47317073	11.47317073	11.47317073
12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	12.29803922	0	0	0	0	0	0	0	0	11.47317073	11.47317073	11.47317073	11.47317073	11.47317073`

a = t.split('\n').map(r => {
  return r.split('\t').map(c => {
    return {
      v: Number(c),
      c: !!Number(c),
    }
  })
})

console.log(a.reduce((rp, rc) => {
  return rp +'\n' + rc.reduce((cp, cc) => {
    return cp + '\t' + cc.v.toFixed(2)
  }, (""))
}, ("")))

for(let i = 0; i<10000; i++) {
	a = a.map((r, ri) => {
		return r.map((c, ci) => {
      c = Object.assign({}, c)
			if (!c.c) {
				let sum =0, count = 0
				//up
				if(ri > 0) {
          sum += a[ri-1][ci].v
          count++
        }
        //down
        if(ri < a.length - 1) {
          sum += a[ri+1][ci].v
          count++
        }
        //left
        if(ci > 0) {
          sum += a[ri][ci-1].v
          count++
        }
        //right
        if(ci < r.length - 1) {
          sum += a[ri][ci+1].v
          count++
        }
        if (count) {
          c.v = sum/count
        } else {
         c.v = 0
        }
      }
      return c
		})
	})
}

console.log(a.reduce((rp, rc) => {
  return rp +'\n' + rc.reduce((cp, cc) => {
    return cp + cc.v.toFixed(2) + '\t'
  }, (""))
}, ("")))